--- sanlock-3.8.0/init.d/sanlock.orig	2020-02-08 22:16:26.415493120 +0100
+++ sanlock-3.8.0/init.d/sanlock	2020-02-08 22:25:28.369223771 +0100
@@ -32,95 +32,86 @@
 [ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog
 
 start() {
-	[ -x $exec ] || exit 5
-
-	if [ ! -d /run/$prog ]; then
-		install -d -o $SANLOCKUSER -g $SANLOCKUSER -m 775 /run/$prog
-		[ -x /sbin/restorecon ] && restorecon /run/$prog
+	# Check if the service is already running?
+	if [ -f /var/lock/subsys/sanlock ]; then
+		msg_already_running "sanlock"
+		return
 	fi
 
-	echo -n $"Starting $prog: "
+	msg_starting "sanlock"
 	daemon $prog daemon $SANLOCKOPTS
 	retval=$?
-	echo
 	[ $retval -eq 0 ] && touch $lockfile
 	return $retval
 }
 
 stop() {
+	if [ ! -f /var/lock/subsys/sanlock ]; then
+		msg_not_running "sanlock"
+		return
+	fi
 	PID=$(pidofproc -p $runfile $prog)
 
-	echo -n $"Sending stop signal $prog ($PID): "
 	killproc -p $runfile $prog -TERM
 	retval=$?
-	echo
 
 	if [ $retval -ne 0 ]; then
 		return $retval
 	fi
 
-	echo -n $"Waiting for $prog ($PID) to stop:"
+	show "Waiting for %s (%s) to stop:" "$prog" "$PID"
+	busy
 
 	timeout=10
 	while checkpid $PID; do
 		sleep 1
 		timeout=$((timeout - 1))
 		if [ "$timeout" -le 0 ]; then
-			failure; echo
-			return 1
+			fail
+			retval=1
+			return $retval
 		fi
 	done
 
-	success; echo
+	ok
 	rm -f $lockfile
 	return $retval
 }
 
-restart() {
-	rh_status_q && stop
-	start
-}
-
-reload() {
-	restart
-}
-
-rh_status() {
-	status $prog
-}
-
-rh_status_q() {
-	rh_status >/dev/null 2>&1
+condrestart() {
+	if [ ! -f /var/lock/subsys/sanlock ]; then
+		msg_not_running "sanlock"
+		retval=$1
+		return $retval
+	fi
+	stop && start
+	retval=$?
+	return $retval
 }
 
 case "$1" in
 	start)
-		rh_status_q && exit 0
-		$1
+		start
 		;;
 	stop)
-		rh_status_q || exit 0
-		$1
+		stop
 		;;
 	restart)
-		$1
+		stop
+		start
 		;;
-	reload)
-		rh_status_q || exit 7
-		$1
+	try-restart)
+		condrestart 0
 		;;
 	force-reload)
-		force_reload
+		condrestart 7
 		;;
 	status)
-		rh_status
-		;;
-	condrestart|try-restart)
-		rh_status_q || exit 0
-		restart
+		status --pidfile $runfile sanlock
+		retval=$?
 		;;
 	*)
-		echo $"Usage $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
-		exit 2
+		msg_usage "$0 {start|stop|status|restart||try-restart|force-reload}"
+		exit 3
 esac
-exit $?
+exit $retval
--- sanlock-3.8.0/init.d/wdmd.orig	2020-02-08 22:16:26.418826435 +0100
+++ sanlock-3.8.0/init.d/wdmd	2020-02-08 22:32:56.383463337 +0100
@@ -42,114 +42,103 @@
 	retval=$?
 
 	if [ $retval -ne 0 ]; then
-		echo -n $"Loading the softdog kernel module: "
+		show "Loading the softdog kernel module: "
 		modprobe softdog && udevadm settle
 
 		watchdog_probe
 		retval=$?
 		if [ $retval -ne 0 ]; then
-			failure; echo
+			fail
 			return 1
 		fi
-		success; echo
+		ok
 	fi
 }
 
 start() {
-	watchdog_check
-
-	[ -x $exec ] || exit 5
-
-	if [ ! -d /run/$prog ]; then
-		install -d -g $WDMDGROUP -m 775 /run/$prog
-		[ -x /sbin/restorecon ] && restorecon /run/$prog
+	# Check if the service is already running?
+	if [ -f $lockfile ]; then
+		msg_already_running "wdmd"
+		return
 	fi
 
-	echo -n $"Starting $prog: "
+	watchdog_check
+
+	msg_starting "wdmd"
 	daemon $prog $WDMDOPTS
 	retval=$?
-	echo
 	[ $retval -eq 0 ] && touch $lockfile
 	return $retval
 }
 
 stop() {
+	if [ ! -f $lockfile ]; then
+		msg_not_running "wdmd"
+		return
+	fi
 	PID=$(pidofproc -p $runfile $prog)
 
-	echo -n $"Sending stop signal $prog ($PID): "
 	killproc -p $runfile $prog -TERM
 	retval=$?
-	echo
 
 	if [ $retval -ne 0 ]; then
 		return $retval
 	fi
 
-	echo -n $"Waiting for $prog ($PID) to stop:"
+	show "Waiting for %s (%s) to stop:" "$prog" "$PID"
 
 	timeout=10
 	while checkpid $PID; do
 		sleep 1
 		timeout=$((timeout - 1))
 		if [ "$timeout" -le 0 ]; then
-			failure; echo
-			return 1
+			fail
+			retval=1
+			return $retval
 		fi
 	done
 
-	success; echo
+	ok
 	rm -f $lockfile
 	return $retval
 }
 
-restart() {
-	rh_status_q && stop
+condrestart() {
+	if [ ! -f $lockfile ]; then
+		msg_not_running "wdmd"
+		retval=$1
+		return $retval
+	fi
+	stop
 	start
 }
 
-reload() {
-	restart
-}
-
-rh_status() {
-	status $prog
-}
-
-rh_status_q() {
-	rh_status >/dev/null 2>&1
-}
-
 case "$1" in
 	start)
-		rh_status_q && exit 0
 		$1
 		;;
 	stop)
-		rh_status_q || exit 0
 		$1
 		;;
 	restart)
-		$1
-		;;
-	reload)
-		rh_status_q || exit 7
-		$1
+		stop
+		start
 		;;
 	watchdog-check)
 		watchdog_check
 		;;
 	force-reload)
-		force_reload
+		condrestart 7
 		;;
 	status)
-		rh_status
+		status --pidfile $runfile wdmd
 		;;
 	condrestart|try-restart)
 		rh_status_q || exit 0
-		restart
+		condrestart 0
 		;;
 	*)
-		echo $"Usage $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
-		exit 2
+		msg_usage "$0 {start|stop|status|restart|condrestart|try-restart|force-reload}"
+		exit 3
 esac
-exit $?
+exit $retval
--- sanlock-3.8.0/init.d/fence_sanlockd.orig	2019-06-12 21:07:38.000000000 +0200
+++ sanlock-3.8.0/init.d/fence_sanlockd	2020-02-08 22:34:27.129638389 +0100
@@ -33,42 +33,35 @@
 [ -f /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog
 
 start() {
-	[ -x $exec ] || exit 5
+	# Check if the service is already running?
+	if [ -f /var/lock/subsys/sanlock ]; then
+		msg_already_running "sanlock"
+		return
+ 	fi
 
 	# start wdmd and sanlock daemons if they aren't running
+	/etc/rc.d/init.d/wdmd status >/dev/null 2>&1 || /etc/rc.d/init.d/wdmd start
+	/etc/rc.d/init.d/sanlock status >/dev/null 2>&1 || /etc/rc.d/init.d/sanlock start
 
-	service wdmd status > /dev/null 2>&1 || service wdmd start
-
-	service sanlock status > /dev/null 2>&1 || service sanlock start
-
-	[ ! -d /run/$prog ] && install -d -m 775 /run/$prog
-
-	[ ! -d /run/$agent ] && install -d -m 775 /run/$agent
-
-	[ -n "$(which restorecon)" ] && \
-		[ -x "$(which restorecon)" ] && \
-		restorecon /run/$prog
-
-	[ -n "$(which restorecon)" ] && \
-		[ -x "$(which restorecon)" ] && \
-		restorecon /run/$agent
-
-	echo -n $"Starting $prog: "
+	msg_starting "$prog"
 	daemon $prog $FENCESANLOCKDOPTS
 	retval=$?
-	echo
 	[ $retval -eq 0 ] && touch $lockfile
 	return $retval
 }
 
 stop() {
+	if [ ! -f /var/lock/subsys/$prog ]; then
+		msg_not_running "$prog"
+		return
+	fi
 	agent_ps="$(ps ax -o pid,args | grep fence_sanlock | grep -v grep | grep -v fence_sanlockd)"
 
 	[ -n "$agent_ps" ] && {
 		agent_pid="$(echo $agent_ps | awk '{print $1}')"
-		echo -n "cannot stop while $agent $agent_pid is running"
-		failure; echo
-		return 1
+		echo "Cannot stop while $agent $agent_pid is running" >&2
+		retval=1
+		return $retval
 	}
 
 	# Ideally, we'd like a general way to check if anything
@@ -78,17 +71,17 @@
 	if [ -d /sys/kernel/dlm/ ]; then
 		count="$(ls -A /sys/kernel/dlm/ | wc -l)"
 		if [ $count -ne 0 ]; then
-			echo -n "cannot stop while dlm lockspaces exist"
-			failure; echo
-			return 1
+			echo "Cannot stop while dlm lockspaces exist" >&2
+			retval=1
+			return $retval
 		fi
 	fi
 
 	if [ -d /sys/kernel/config/dlm/cluster ]; then
 		# this dir exists while dlm_controld is running
-		echo -n "cannot stop while dlm is running"
-		failure; echo
-		return 1
+		echo "Cannot stop while dlm is running" >&2
+		retval=1
+		return $retval
 	fi
 
 	PID=$(pidofproc -p $runfile $prog)
@@ -96,10 +89,8 @@
 	# We have to use SIGHUP to mean stop because sanlock
 	# uses SIGTERM to mean that the lockspace failed.
 
-	echo -n $"Sending stop signal $prog ($PID): "
 	killproc -p $runfile $prog -HUP
 	retval=$?
-	echo
 
 	if [ $retval -ne 0 ]; then
 		return $retval
@@ -113,75 +104,65 @@
 		echo "" > $fifofile
 	fi
 
-	echo -n $"Waiting for $prog ($PID) to stop:"
+	show "Waiting for %s (%s) to stop:" "$prog" "$PID"
 
 	timeout=10
 	while checkpid $PID; do
 		sleep 1
 		timeout=$((timeout - 1))
 		if [ "$timeout" -le 0 ]; then
-			failure; echo
+			fail
 			return 1
 		fi
 	done
 
-	success; echo
+	ok
 	rm -f $lockfile
 
 	# stop wdmd and sanlock daemons if they are running
-
-	service sanlock status > /dev/null 2>&1 && service sanlock stop
-
-	service wdmd status > /dev/null 2>&1 && service wdmd stop
+	/etc/rc.d/init.d/sanlock status >/dev/null 2>&1 && /etc/rc.d/init.d/sanlock stop
+	/etc/rc.d/init.d/wdmd status >/dev/null 2>&1 && /etc/rc.d/init.d/wdmd stop
 
 	return $retval
 }
 
-restart() {
-	rh_status_q && stop
-	start
-}
-
-reload() {
-	restart
-}
-
-rh_status() {
-	status $prog
-}
-
-rh_status_q() {
-	rh_status >/dev/null 2>&1
+condrestart() {
+	if [ ! -f /var/lock/subsys/$prog ]; then
+		msg_not_running "$prog"
+		retval=$1
+		return $retval
+	fi
+	stop && start
+	retval=$?
+	return $retval
 }
-
+ 
 case "$1" in
 	start)
-		rh_status_q && exit 0
-		$1
+		start
 		;;
 	stop)
-		rh_status_q || exit 0
-		$1
+		stop
 		;;
 	restart)
-		$1
+		stop && start
 		;;
 	reload)
 		rh_status_q || exit 7
 		$1
 		;;
 	force-reload)
-		force_reload
+		condrestart 7
 		;;
 	status)
-		rh_status
+		status --pidfile $runfile $prog
+		retval=$?
 		;;
 	condrestart|try-restart)
-		rh_status_q || exit 0
-		restart
+		condrestart 0
 		;;
 	*)
-		echo $"Usage $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
-		exit 2
+		msg_usage "$0 {start|stop|status|restart|condrestart|try-restart|force-reload}"
+		exit 3
 esac
 exit $?
